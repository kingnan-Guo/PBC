C51 COMPILER V9.54   UART                                                                  04/08/2022 01:26:36 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\Objects\uart.obj
COMPILER INVOKED BY: C:\Program Files\Keil_v5\C51\BIN\C51.EXE uart.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.
                    -\Listings\uart.lst) TABS(2) OBJECT(.\Objects\uart.obj)

line level    source

   1          /**
   2           * @file uart.c
   3           * @author your name (you@domain.com)
   4           * @brief 
   5           * @version 0.1
   6           * @date 2022-04-07
   7           * 
   8           * @copyright Copyright (c) 2022
   9           * 
  10           */
  11          
  12          
  13          
  14          
  15          
  16          #include "reg51.h"
  17          #include "uart.h"
  18          #include "stdio.h"
  19          
  20          
  21          
  22          unsigned char start_time = 0;
  23          unsigned char recv_buf[MAX_REV_NUM];
  24          unsigned char recv_cnt = 0;
  25          unsigned char recv_timer_cnt;
  26          
  27          unsigned char recv_flag;
  28          unsigned char machine_step = 0;
  29          
  30          unsigned char led_data;
  31          
  32          
  33          unsigned char sum_check = 0;
  34          unsigned char xor_check = 0;
  35          unsigned char recv_data;
  36          
  37          
  38          void uartInit(void) {
  39   1          PCON &= 0x7F; // & 0111 1111
  40   1          // ‰∏≤Âè£ ‰∏≠Êñ≠  8‰Ωç Êó†ÊïôÈ™å‰Ωç  Ê≥¢ÁâπÁéá 
  41   1          SCON = 0x50;//  M0 M1 M2  GEN  TB8 RB8 TI RI  = 0101 0000
  42   1          ES = 1;// ‰∏≤Ë°åÂè£‰∏≠Êñ≠
  43   1          // ÂÆöÊó∂Âô® T1  Â∑•‰ΩúÂú®ÊñπÂºè 3 8‰ΩçÂèØÈáçËΩΩ
  44   1          TMOD = 0x20;// GATE C/T M1 M0  GATE C/T M1 M0  = 0010 0000
  45   1          // Ê≥¢ÁâπÁéá 4800
  46   1          TH1 = 0xFA;
  47   1          TH1 = 0xFA;
  48   1          ET1 = 0;// Á¶ÅÊ≠¢ÂÆöÊó∂Âô® ‰∏≠Êñ≠ 
  49   1          EA = 1;//ÂºÄÂêØÊÄª‰∏≠Êñ≠
  50   1          TR1 = 1;// ÂêØÂä®ÂÆöÊó∂Âô® 
  51   1      }
  52          
  53          
  54          // ÊñπÂºè 4 ‰∏≤Âè£‰∏≠Êñ≠
C51 COMPILER V9.54   UART                                                                  04/08/2022 01:26:36 PAGE 2   

  55          void uart_ISR() interrupt 4 {
  56   1      
  57   1          
  58   1          if (RI)
  59   1          {
  60   2              RI = 0;
  61   2              // Êé•Êî∂‰∏ÄÂ∏ßÊï∞ÊçÆÁöÑÊó∂ÂÄô  , ÊâìÂºÄ ËΩØ‰ª∂ ÂÆöÊó∂ËÆ°Êï∞Âô®(Ëá™ÂÆö‰πâÁöÑËÆ°Êï∞Âô®)
  62   2              // start_time = 1;
  63   2              // if (recv_cnt < MAX_REV_NUM)
  64   2              // {
  65   2              //     recv_buf[recv_cnt] = SBUF;//Êé•Êî∂Êï∞ÊçÆÁºìÂÜ≤Âå∫
  66   2              //     recv_cnt++;
  67   2              // } else {
  68   2              //    recv_cnt = MAX_REV_NUM;
  69   2              // }
  70   2              // // ÊØèÊé•Êî∂‰∏ÄÂ∏ßÊï∞ÊçÆ Âêé ÈÉΩÊ∏ÖÈõ∂, ÊääÂÆöÊó∂ËÆ°Êï∞ Ê∏ÖÈõ∂
  71   2              // // ‰ΩÜÂΩì ‰∏çÂÜçËøõÂÖ•Âà∞‰∏≤Âè£‰∏≠Êñ≠ÁöÑÊó∂ÂÄôÔºåÊ≤°ÊúâÊñ∞ÁöÑÊï∞ÊçÆÂèëÈÄÅ ËøáÊù•, Âú®ÂÆöÊó∂Âô®‰
             -∏≠ ‰ºö‰∏çÊñ≠Á¥ØÂä†Ôºå Ë∂ÖËøá ‰∏ÄÂÆöÂÄºÁöÑÊó∂ÂÄôÔºåÂà§Êñ≠Êé•Êî∂ÁöÑÊ≠§Êï∞ÊçÆÂåÖ ÁªìÊùü
  72   2              // recv_timer_cnt = 0;
  73   2              // recv_data = SBUF;
  74   2      
  75   2      
  76   2      
  77   2              recv_data = SBUF;
  78   2              // printf('1');
  79   2              
  80   2              // Áä∂ÊÄÅÊú∫ÁöÑ ÊÄùÊÉ≥ÁºñÁ®ã
  81   2              switch (machine_step) {
  82   3      
  83   3                  case 0:
  84   3                      if(recv_data == 0xAA){
  85   4                          machine_step = 1;
  86   4                      } else{
  87   4                          machine_step = 0;
  88   4                      }
  89   3                      break;
  90   3      
  91   3                  case 1:
  92   3                      if(recv_data == 0x55){
  93   4                          machine_step = 2;
  94   4                      } else{
  95   4                          machine_step = 0;
  96   4                      }
  97   3                      break;
  98   3      
  99   3                  case 2:
 100   3                      // recv_buf[recv_cnt] = SBUF;
 101   3                      // printf("recv_buf[recv_cnt] = %d", recv_buf[recv_cnt]);
 102   3                      sum_check += recv_data;
 103   3                      xor_check ^= recv_data; //ÂºÇÊàñ Ê†°È™å
 104   3                      recv_buf[recv_cnt] = recv_data;
 105   3                      recv_cnt++;
 106   3                      // ÂΩìÂâçÊï∞ÊçÆÂõ∫ÂÆö ÊâÄ‰ª• ÊòØÂ§ß‰∫é 2
 107   3                      if(recv_cnt > 2){
 108   4                          machine_step = 3;
 109   4                      } else {
 110   4                          machine_step = 2;
 111   4                      }
 112   3                      break;
 113   3      
 114   3                  case 3:
 115   3                      // recv_buf[recv_cnt] = SBUF;
C51 COMPILER V9.54   UART                                                                  04/08/2022 01:26:36 PAGE 3   

 116   3                      // printf("recv_buf[recv_cnt] = %d", recv_buf[recv_cnt]);
 117   3                      if(sum_check == recv_data) {
 118   4                          machine_step = 4;                    
 119   4                      } else {
 120   4                          machine_step = 0;
 121   4                      }
 122   3                      // printf("3");
 123   3                      break;
 124   3      
 125   3      
 126   3                  case 4:
 127   3                      // recv_buf[recv_cnt] = SBUF;
 128   3                      // printf("recv_buf[recv_cnt] = %d", recv_buf[recv_cnt]);
 129   3                      // printf("4");
 130   3                      if(xor_check == recv_data) {
 131   4                          recv_flag = 1;
 132   4                      }
 133   3                      // recv_flag = 1;
 134   3                      machine_step = 0;
 135   3                      recv_cnt = 0;
 136   3                      sum_check = 0;
 137   3                      xor_check = 0;
 138   3                      // recv_data = 0;
 139   3                      break;
 140   3      
 141   3                  default:
 142   3                      break;
 143   3              }
 144   2      
 145   2      
 146   2      
 147   2          }
 148   1          if(TI){
 149   2              // DelayXms(200);
 150   2              TI = 0;
 151   2          }
 152   1          
 153   1      }
 154          
 155          
 156          void sendByte(unsigned char dat){
 157   1          SBUF = dat;
 158   1          while (!TI); 
 159   1          // DelayXms(200);
 160   1          // TI = 0;
 161   1          
 162   1      }
 163          
 164          void sendString(unsigned char * dat){
 165   1          while (* dat != '\0' )
 166   1          {
 167   2              sendByte(* (dat++));
 168   2          }
 169   1      }
 170          
 171          // ÈáçÂÆöÂêë printf ÂáΩÊï∞
 172          char putchar(char c){
 173   1          sendByte(c);
 174   1          return c;
 175   1      }
 176          
 177          // Ê∏ÖÈô§ recv_buffer 
C51 COMPILER V9.54   UART                                                                  04/08/2022 01:26:36 PAGE 4   

 178          void clear_recv_buffer(unsigned char * buf ){
 179   1          unsigned char i;
 180   1          for (i = 0; i < MAX_REV_NUM; i++)
 181   1          {
 182   2              buf[i]  = 0;
 183   2          }
 184   1          
 185   1      
 186   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    240    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     29       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
