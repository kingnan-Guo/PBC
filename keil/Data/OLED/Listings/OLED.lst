C51 COMPILER V9.54   OLED                                                                  02/15/2022 00:09:03 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\Objects\OLED.obj
COMPILER INVOKED BY: C:\Program Files\Keil_v5\C51\BIN\C51.EXE OLED.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.
                    -\Listings\OLED.lst) TABS(2) OBJECT(.\Objects\OLED.obj)

line level    source

   1          /**
   2           * @file OLED.c
   3           * @author kingnan (github.com/kingnan-Guo/PBC)
   4           * @brief 这部分主要包含 OLED 调用的 函数，没有 I2C的操作
   5           * @version 0.1
   6           * @date 2022-02-09
   7           * 
   8           * @copyright Copyright (c) 2022
   9           * 
  10           */
  11          
  12          // #include"reg51.h"
  13          // #include"intrins.h"
  14          // #include<stdio.h> 
  15          // #include <stdlib.h> 
  16          
  17          #include "oled.h"
  18          #include "src/oledfont.h"
  19          #include "I2C.h"
  20          
  21          
  22          
  23          //OLED的显存
  24          //存放格式如下.
  25          //[0]0 1 2 3 ... 127  
  26          //[1]0 1 2 3 ... 127  
  27          //[2]0 1 2 3 ... 127  
  28          //[3]0 1 2 3 ... 127  
  29          //[4]0 1 2 3 ... 127  
  30          //[5]0 1 2 3 ... 127  
  31          //[6]0 1 2 3 ... 127  
  32          //[7]0 1 2 3 ... 127         
  33          
  34          
  35          void delay_ms(unsigned int ms)
  36          {                         
  37   1        unsigned int a;
  38   1        while(ms)
  39   1        {
  40   2          a=1800;
  41   2          while(a--);
  42   2          ms--;
  43   2        }
  44   1        return;
  45   1      }
  46          
  47          //反显函数
  48          void OLED_ColorTurn(u8 i)
  49          {
  50   1        if(i==0)
  51   1          {
  52   2            OLED_WR_Byte(0xA6,OLED_CMD);//正常显示
  53   2          }
  54   1        if(i==1)
C51 COMPILER V9.54   OLED                                                                  02/15/2022 00:09:03 PAGE 2   

  55   1          {
  56   2            OLED_WR_Byte(0xA7,OLED_CMD);//反色显示
  57   2          }
  58   1      }
  59          
  60          //屏幕旋转180度
  61          void OLED_DisplayTurn(u8 i)
  62          {
  63   1        if(i==0)
  64   1          {
  65   2            OLED_WR_Byte(0xC8,OLED_CMD);//正常显示
  66   2            OLED_WR_Byte(0xA1,OLED_CMD);
  67   2          }
  68   1        if(i==1)
  69   1          {
  70   2            OLED_WR_Byte(0xC0,OLED_CMD);//反转显示
  71   2            OLED_WR_Byte(0xA0,OLED_CMD);
  72   2          }
  73   1      }
  74          
  75          
  76          // //延时
  77          // void IIC_delay(void)
  78          // {
  79          //  u8 t=1;
  80          //  while(t--);
  81          // }
  82          
  83          // //起始信号
  84          // void I2C_Start(void)
  85          // {
  86          //  OLED_SDA_Set();
  87          //  OLED_SCL_Set();
  88          //  IIC_delay();
  89          //  OLED_SDA_Clr();
  90          //  IIC_delay();
  91          //  OLED_SCL_Clr();
  92             
  93          // }
  94          
  95          // //结束信号
  96          // void I2C_Stop(void)
  97          // {
  98          //  OLED_SDA_Clr();
  99          //  OLED_SCL_Set();
 100          //  IIC_delay();
 101          //  OLED_SDA_Set();
 102          // }
 103          
 104          // //等待信号响应
 105          // void I2C_WaitAck(void) //测数据信号的电平
 106          // {
 107          //  OLED_SDA_Set();
 108          //  IIC_delay();
 109          //  OLED_SCL_Set();
 110          //  IIC_delay();
 111          //  OLED_SCL_Clr();
 112          //  IIC_delay();
 113          // }
 114          
 115          //写入一个字节
 116          // void Send_Byte(u8 dat)
C51 COMPILER V9.54   OLED                                                                  02/15/2022 00:09:03 PAGE 3   

 117          // {
 118          //  u8 i;
 119          //  for(i=0;i<8;i++)
 120          //  {
 121          //    OLED_SCL_Clr();//将时钟信号设置为低电平
 122          //    if(dat&0x80)//将dat的8位从最高位依次写入
 123          //    {
 124          //      OLED_SDA_Set();
 125          //     }
 126          //    else
 127          //    {
 128          //      OLED_SDA_Clr();
 129          //     }
 130          //    IIC_delay();
 131          //    OLED_SCL_Set();
 132          //    IIC_delay();
 133          //    OLED_SCL_Clr();
 134          //    dat<<=1;
 135          //   }
 136          // }
 137          
 138          //发送一个字节
 139          //向SSD1306写入一个字节。
 140          //mode:数据/命令标志 0,表示命令;1,表示数据;
 141          void OLED_WR_Byte(u8 dat,u8 mode)
 142          {
 143   1        I2C_Start();
 144   1        Send_Byte(0x78);
 145   1        I2C_WaitAck();
 146   1        if(mode){Send_Byte(0x40);}
 147   1        else{Send_Byte(0x00);}
 148   1        I2C_WaitAck();
 149   1        Send_Byte(dat);
 150   1        I2C_WaitAck();
 151   1        I2C_Stop();
 152   1      }
 153          
 154          //坐标设置
 155          
 156          void OLED_Set_Pos(u8 x, u8 y) 
 157          { 
 158   1        OLED_WR_Byte(0xb0+y,OLED_CMD);
 159   1        OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
 160   1        OLED_WR_Byte((x&0x0f),OLED_CMD);
 161   1      }       
 162          //开启OLED显示    
 163          void OLED_Display_On(void)
 164          {
 165   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 166   1        OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
 167   1        OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
 168   1      }
 169          //关闭OLED显示     
 170          void OLED_Display_Off(void)
 171          {
 172   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 173   1        OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
 174   1        OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
 175   1      }            
 176          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!   
 177          void OLED_Clear(void)  
 178          {  
C51 COMPILER V9.54   OLED                                                                  02/15/2022 00:09:03 PAGE 4   

 179   1        u8 i,n;       
 180   1        for(i=0;i<8;i++)  
 181   1        {  
 182   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 183   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置—列低地址
 184   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置—列高地址   
 185   2          for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
 186   2        } //更新显示
 187   1      }
 188          
 189          //在指定位置显示一个字符,包括部分字符
 190          //x:0~127
 191          //y:0~63         
 192          //sizey:选择字体 6x8  8x16
 193          void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 sizey)
 194          {       
 195   1        u8 c=0,sizex=sizey/2;
 196   1        u16 i=0,size1;
 197   1        if(sizey==8)size1=6;
 198   1        else size1=(sizey/8+((sizey%8)?1:0))*(sizey/2);
 199   1        c=chr-' ';//得到偏移后的值
 200   1        OLED_Set_Pos(x,y);
 201   1        for(i=0;i<size1;i++)
 202   1        {
 203   2          if(i%sizex==0&&sizey!=8) OLED_Set_Pos(x,y++);
 204   2          if(sizey==8) OLED_WR_Byte(asc2_0806[c][i],OLED_DATA);//6X8字号
 205   2          else if(sizey==16) OLED_WR_Byte(asc2_1608[c][i],OLED_DATA);//8x16字号
 206   2      //    else if(sizey==xx) OLED_WR_Byte(asc2_xxxx[c][i],OLED_DATA);//用户添加字号
 207   2          else return;
 208   2        }
 209   1      }
 210          //m^n函数
 211          u32 oled_pow(u8 m,u8 n)
 212          {
 213   1        u32 result=1;  
 214   1        while(n--)result*=m;    
 215   1        return result;
 216   1      }         
 217          //显示数字
 218          //x,y :起点坐标
 219          //num:要显示的数字
 220          //len :数字的位数
 221          //sizey:字体大小      
 222          void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 sizey)
 223          {           
 224   1        u8 t,temp,m=0;
 225   1        u8 enshow=0;
 226   1        if(sizey==8)m=2;
 227   1        for(t=0;t<len;t++)
 228   1        {
 229   2          temp=(num/oled_pow(10,len-t-1))%10;
 230   2          if(enshow==0&&t<(len-1))
 231   2          {
 232   3            if(temp==0)
 233   3            {
 234   4              OLED_ShowChar(x+(sizey/2+m)*t,y,' ',sizey);
 235   4              continue;
 236   4            }else enshow=1;
 237   3          }
 238   2          OLED_ShowChar(x+(sizey/2+m)*t,y,temp+'0',sizey);
 239   2        }
 240   1      }
C51 COMPILER V9.54   OLED                                                                  02/15/2022 00:09:03 PAGE 5   

 241          //显示一个字符号串
 242          void OLED_ShowString(u8 x,u8 y,u8 *chr,u8 sizey)
 243          {
 244   1        u8 j=0;
 245   1        while (chr[j]!='\0')
 246   1        {   
 247   2          OLED_ShowChar(x,y,chr[j++],sizey);
 248   2          if(sizey==8)x+=6;
 249   2          else x+=sizey/2;
 250   2        }
 251   1      }
 252          //显示汉字
 253          void OLED_ShowChinese(u8 x,u8 y,u8 no,u8 sizey)
 254          {
 255   1        u16 i,size1=(sizey/8+((sizey%8)?1:0))*sizey;
 256   1        for(i=0;i<size1;i++)
 257   1        {
 258   2          if(i%sizey==0) OLED_Set_Pos(x,y++);
 259   2          if(sizey==16) OLED_WR_Byte(Hzk[no][i],OLED_DATA);//16x16字号
 260   2      //    else if(sizey==xx) OLED_WR_Byte(xxx[c][i],OLED_DATA);//用户添加字号
 261   2          else return;
 262   2        }       
 263   1      }
 264          
 265          
 266          //显示图片
 267          //x,y显示坐标
 268          //sizex,sizey,图片长宽
 269          //BMP：要显示的图片
 270          void OLED_DrawBMP(u8 x,u8 y,u8 sizex, u8 sizey,u8 BMP[])
 271          {   
 272   1        u16 j=0;
 273   1        u8 i,m;
 274   1        sizey=sizey/8+((sizey%8)?1:0);
 275   1        for(i=0;i<sizey;i++)
 276   1        {
 277   2          OLED_Set_Pos(x,i+y);
 278   2          for(m=0;m<sizex;m++)
 279   2          {      
 280   3            OLED_WR_Byte(BMP[j++],OLED_DATA);       
 281   3          }
 282   2        }
 283   1      } 
 284          
 285          
 286          
 287          //初始化           
 288          void OLED_Init(void)
 289          {
 290   1        //OLED_RES_Clr();
 291   1        delay_ms(200);
 292   1        //OLED_RES_Set();
 293   1        
 294   1        OLED_WR_Byte(0xAE,OLED_CMD);//--turn off oled panel
 295   1        OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
 296   1        OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
 297   1        OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
 298   1        OLED_WR_Byte(0x81,OLED_CMD);//--set contrast control register
 299   1        OLED_WR_Byte(0xCF,OLED_CMD); // Set SEG Output Current Brightness
 300   1        OLED_WR_Byte(0xA1,OLED_CMD);//--Set SEG/Column Mapping     0xa0左右反置 0xa1正常
 301   1        OLED_WR_Byte(0xC8,OLED_CMD);//Set COM/Row Scan Direction   0xc0上下反置 0xc8正常
 302   1        OLED_WR_Byte(0xA6,OLED_CMD);//--set normal display
C51 COMPILER V9.54   OLED                                                                  02/15/2022 00:09:03 PAGE 6   

 303   1        OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
 304   1        OLED_WR_Byte(0x3f,OLED_CMD);//--1/64 duty
 305   1        OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset Shift Mapping RAM Counter (0x00~0x3F)
 306   1        OLED_WR_Byte(0x00,OLED_CMD);//-not offset
 307   1        OLED_WR_Byte(0xd5,OLED_CMD);//--set display clock divide ratio/oscillator frequency
 308   1        OLED_WR_Byte(0x80,OLED_CMD);//--set divide ratio, Set Clock as 100 Frames/Sec
 309   1        OLED_WR_Byte(0xD9,OLED_CMD);//--set pre-charge period
 310   1        OLED_WR_Byte(0xF1,OLED_CMD);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
 311   1        OLED_WR_Byte(0xDA,OLED_CMD);//--set com pins hardware configuration
 312   1        OLED_WR_Byte(0x12,OLED_CMD);
 313   1        OLED_WR_Byte(0xDB,OLED_CMD);//--set vcomh
 314   1        OLED_WR_Byte(0x40,OLED_CMD);//Set VCOM Deselect Level
 315   1        OLED_WR_Byte(0x20,OLED_CMD);//-Set Page Addressing Mode (0x00/0x01/0x02)
 316   1        OLED_WR_Byte(0x02,OLED_CMD);//
 317   1        OLED_WR_Byte(0x8D,OLED_CMD);//--set Charge Pump enable/disable
 318   1        OLED_WR_Byte(0x14,OLED_CMD);//--set(0x10) disable
 319   1        OLED_WR_Byte(0xA4,OLED_CMD);// Disable Entire Display On (0xa4/0xa5)
 320   1        OLED_WR_Byte(0xA6,OLED_CMD);// Disable Inverse Display On (0xa6/a7) 
 321   1        OLED_Clear();
 322   1        OLED_WR_Byte(0xAF,OLED_CMD); /*display ON*/ 
 323   1      }
 324          
 325          
 326          
 327          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1144    ----
   CONSTANT SIZE    =   2296    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      54
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
